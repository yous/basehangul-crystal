require "./basehangul/version"
require "./basehangul/utils"

# Human-readable binary encoding.
module BaseHangul
  # Maps index of EUC-KR hangul character to corresponding UTF-8 codepoint.
  EUC_KR_TO_UTF_8 = [0xAC00, 0xAC01, 0xAC04, 0xAC07, 0xAC08,
                     0xAC09, 0xAC0A, 0xAC10, 0xAC11, 0xAC12,
                     0xAC13, 0xAC14, 0xAC15, 0xAC16, 0xAC17,
                     0xAC19, 0xAC1A, 0xAC1B, 0xAC1C, 0xAC1D,
                     0xAC20, 0xAC24, 0xAC2C, 0xAC2D, 0xAC2F,
                     0xAC30, 0xAC31, 0xAC38, 0xAC39, 0xAC3C,
                     0xAC40, 0xAC4B, 0xAC4D, 0xAC54, 0xAC58,
                     0xAC5C, 0xAC70, 0xAC71, 0xAC74, 0xAC77,
                     0xAC78, 0xAC7A, 0xAC80, 0xAC81, 0xAC83,
                     0xAC84, 0xAC85, 0xAC86, 0xAC89, 0xAC8A,
                     0xAC8B, 0xAC8C, 0xAC90, 0xAC94, 0xAC9C,
                     0xAC9D, 0xAC9F, 0xACA0, 0xACA1, 0xACA8,
                     0xACA9, 0xACAA, 0xACAC, 0xACAF, 0xACB0,
                     0xACB8, 0xACB9, 0xACBB, 0xACBC, 0xACBD,
                     0xACC1, 0xACC4, 0xACC8, 0xACCC, 0xACD5,
                     0xACD7, 0xACE0, 0xACE1, 0xACE4, 0xACE7,
                     0xACE8, 0xACEA, 0xACEC, 0xACEF, 0xACF0,
                     0xACF1, 0xACF3, 0xACF5, 0xACF6, 0xACFC,
                     0xACFD, 0xAD00, 0xAD04, 0xAD06, 0xAD0C,
                     0xAD0D, 0xAD0F, 0xAD11, 0xAD18, 0xAD1C,
                     0xAD20, 0xAD29, 0xAD2C, 0xAD2D, 0xAD34,
                     0xAD35, 0xAD38, 0xAD3C, 0xAD44, 0xAD45,
                     0xAD47, 0xAD49, 0xAD50, 0xAD54, 0xAD58,
                     0xAD61, 0xAD63, 0xAD6C, 0xAD6D, 0xAD70,
                     0xAD73, 0xAD74, 0xAD75, 0xAD76, 0xAD7B,
                     0xAD7C, 0xAD7D, 0xAD7F, 0xAD81, 0xAD82,
                     0xAD88, 0xAD89, 0xAD8C, 0xAD90, 0xAD9C,
                     0xAD9D, 0xADA4, 0xADB7, 0xADC0, 0xADC1,
                     0xADC4, 0xADC8, 0xADD0, 0xADD1, 0xADD3,
                     0xADDC, 0xADE0, 0xADE4, 0xADF8, 0xADF9,
                     0xADFC, 0xADFF, 0xAE00, 0xAE01, 0xAE08,
                     0xAE09, 0xAE0B, 0xAE0D, 0xAE14, 0xAE30,
                     0xAE31, 0xAE34, 0xAE37, 0xAE38, 0xAE3A,
                     0xAE40, 0xAE41, 0xAE43, 0xAE45, 0xAE46,
                     0xAE4A, 0xAE4C, 0xAE4D, 0xAE4E, 0xAE50,
                     0xAE54, 0xAE56, 0xAE5C, 0xAE5D, 0xAE5F,
                     0xAE60, 0xAE61, 0xAE65, 0xAE68, 0xAE69,
                     0xAE6C, 0xAE70, 0xAE78, 0xAE79, 0xAE7B,
                     0xAE7C, 0xAE7D, 0xAE84, 0xAE85, 0xAE8C,
                     0xAEBC, 0xAEBD, 0xAEBE, 0xAEC0, 0xAEC4,
                     0xAECC, 0xAECD, 0xAECF, 0xAED0, 0xAED1,
                     0xAED8, 0xAED9, 0xAEDC, 0xAEE8, 0xAEEB,
                     0xAEED, 0xAEF4, 0xAEF8, 0xAEFC, 0xAF07,
                     0xAF08, 0xAF0D, 0xAF10, 0xAF2C, 0xAF2D,
                     0xAF30, 0xAF32, 0xAF34, 0xAF3C, 0xAF3D,
                     0xAF3F, 0xAF41, 0xAF42, 0xAF43, 0xAF48,
                     0xAF49, 0xAF50, 0xAF5C, 0xAF5D, 0xAF64,
                     0xAF65, 0xAF79, 0xAF80, 0xAF84, 0xAF88,
                     0xAF90, 0xAF91, 0xAF95, 0xAF9C, 0xAFB8,
                     0xAFB9, 0xAFBC, 0xAFC0, 0xAFC7, 0xAFC8,
                     0xAFC9, 0xAFCB, 0xAFCD, 0xAFCE, 0xAFD4,
                     0xAFDC, 0xAFE8, 0xAFE9, 0xAFF0, 0xAFF1,
                     0xAFF4, 0xAFF8, 0xB000, 0xB001, 0xB004,
                     0xB00C, 0xB010, 0xB014, 0xB01C, 0xB01D,
                     0xB028, 0xB044, 0xB045, 0xB048, 0xB04A,
                     0xB04C, 0xB04E, 0xB053, 0xB054, 0xB055,
                     0xB057, 0xB059, 0xB05D, 0xB07C, 0xB07D,
                     0xB080, 0xB084, 0xB08C, 0xB08D, 0xB08F,
                     0xB091, 0xB098, 0xB099, 0xB09A, 0xB09C,
                     0xB09F, 0xB0A0, 0xB0A1, 0xB0A2, 0xB0A8,
                     0xB0A9, 0xB0AB, 0xB0AC, 0xB0AD, 0xB0AE,
                     0xB0AF, 0xB0B1, 0xB0B3, 0xB0B4, 0xB0B5,
                     0xB0B8, 0xB0BC, 0xB0C4, 0xB0C5, 0xB0C7,
                     0xB0C8, 0xB0C9, 0xB0D0, 0xB0D1, 0xB0D4,
                     0xB0D8, 0xB0E0, 0xB0E5, 0xB108, 0xB109,
                     0xB10B, 0xB10C, 0xB110, 0xB112, 0xB113,
                     0xB118, 0xB119, 0xB11B, 0xB11C, 0xB11D,
                     0xB123, 0xB124, 0xB125, 0xB128, 0xB12C,
                     0xB134, 0xB135, 0xB137, 0xB138, 0xB139,
                     0xB140, 0xB141, 0xB144, 0xB148, 0xB150,
                     0xB151, 0xB154, 0xB155, 0xB158, 0xB15C,
                     0xB160, 0xB178, 0xB179, 0xB17C, 0xB180,
                     0xB182, 0xB188, 0xB189, 0xB18B, 0xB18D,
                     0xB192, 0xB193, 0xB194, 0xB198, 0xB19C,
                     0xB1A8, 0xB1CC, 0xB1D0, 0xB1D4, 0xB1DC,
                     0xB1DD, 0xB1DF, 0xB1E8, 0xB1E9, 0xB1EC,
                     0xB1F0, 0xB1F9, 0xB1FB, 0xB1FD, 0xB204,
                     0xB205, 0xB208, 0xB20B, 0xB20C, 0xB214,
                     0xB215, 0xB217, 0xB219, 0xB220, 0xB234,
                     0xB23C, 0xB258, 0xB25C, 0xB260, 0xB268,
                     0xB269, 0xB274, 0xB275, 0xB27C, 0xB284,
                     0xB285, 0xB289, 0xB290, 0xB291, 0xB294,
                     0xB298, 0xB299, 0xB29A, 0xB2A0, 0xB2A1,
                     0xB2A3, 0xB2A5, 0xB2A6, 0xB2AA, 0xB2AC,
                     0xB2B0, 0xB2B4, 0xB2C8, 0xB2C9, 0xB2CC,
                     0xB2D0, 0xB2D2, 0xB2D8, 0xB2D9, 0xB2DB,
                     0xB2DD, 0xB2E2, 0xB2E4, 0xB2E5, 0xB2E6,
                     0xB2E8, 0xB2EB, 0xB2EC, 0xB2ED, 0xB2EE,
                     0xB2EF, 0xB2F3, 0xB2F4, 0xB2F5, 0xB2F7,
                     0xB2F8, 0xB2F9, 0xB2FA, 0xB2FB, 0xB2FF,
                     0xB300, 0xB301, 0xB304, 0xB308, 0xB310,
                     0xB311, 0xB313, 0xB314, 0xB315, 0xB31C,
                     0xB354, 0xB355, 0xB356, 0xB358, 0xB35B,
                     0xB35C, 0xB35E, 0xB35F, 0xB364, 0xB365,
                     0xB367, 0xB369, 0xB36B, 0xB36E, 0xB370,
                     0xB371, 0xB374, 0xB378, 0xB380, 0xB381,
                     0xB383, 0xB384, 0xB385, 0xB38C, 0xB390,
                     0xB394, 0xB3A0, 0xB3A1, 0xB3A8, 0xB3AC,
                     0xB3C4, 0xB3C5, 0xB3C8, 0xB3CB, 0xB3CC,
                     0xB3CE, 0xB3D0, 0xB3D4, 0xB3D5, 0xB3D7,
                     0xB3D9, 0xB3DB, 0xB3DD, 0xB3E0, 0xB3E4,
                     0xB3E8, 0xB3FC, 0xB410, 0xB418, 0xB41C,
                     0xB420, 0xB428, 0xB429, 0xB42B, 0xB434,
                     0xB450, 0xB451, 0xB454, 0xB458, 0xB460,
                     0xB461, 0xB463, 0xB465, 0xB46C, 0xB480,
                     0xB488, 0xB49D, 0xB4A4, 0xB4A8, 0xB4AC,
                     0xB4B5, 0xB4B7, 0xB4B9, 0xB4C0, 0xB4C4,
                     0xB4C8, 0xB4D0, 0xB4D5, 0xB4DC, 0xB4DD,
                     0xB4E0, 0xB4E3, 0xB4E4, 0xB4E6, 0xB4EC,
                     0xB4ED, 0xB4EF, 0xB4F1, 0xB4F8, 0xB514,
                     0xB515, 0xB518, 0xB51B, 0xB51C, 0xB524,
                     0xB525, 0xB527, 0xB528, 0xB529, 0xB52A,
                     0xB530, 0xB531, 0xB534, 0xB538, 0xB540,
                     0xB541, 0xB543, 0xB544, 0xB545, 0xB54B,
                     0xB54C, 0xB54D, 0xB550, 0xB554, 0xB55C,
                     0xB55D, 0xB55F, 0xB560, 0xB561, 0xB5A0,
                     0xB5A1, 0xB5A4, 0xB5A8, 0xB5AA, 0xB5AB,
                     0xB5B0, 0xB5B1, 0xB5B3, 0xB5B4, 0xB5B5,
                     0xB5BB, 0xB5BC, 0xB5BD, 0xB5C0, 0xB5C4,
                     0xB5CC, 0xB5CD, 0xB5CF, 0xB5D0, 0xB5D1,
                     0xB5D8, 0xB5EC, 0xB610, 0xB611, 0xB614,
                     0xB618, 0xB625, 0xB62C, 0xB634, 0xB648,
                     0xB664, 0xB668, 0xB69C, 0xB69D, 0xB6A0,
                     0xB6A4, 0xB6AB, 0xB6AC, 0xB6B1, 0xB6D4,
                     0xB6F0, 0xB6F4, 0xB6F8, 0xB700, 0xB701,
                     0xB705, 0xB728, 0xB729, 0xB72C, 0xB72F,
                     0xB730, 0xB738, 0xB739, 0xB73B, 0xB744,
                     0xB748, 0xB74C, 0xB754, 0xB755, 0xB760,
                     0xB764, 0xB768, 0xB770, 0xB771, 0xB773,
                     0xB775, 0xB77C, 0xB77D, 0xB780, 0xB784,
                     0xB78C, 0xB78D, 0xB78F, 0xB790, 0xB791,
                     0xB792, 0xB796, 0xB797, 0xB798, 0xB799,
                     0xB79C, 0xB7A0, 0xB7A8, 0xB7A9, 0xB7AB,
                     0xB7AC, 0xB7AD, 0xB7B4, 0xB7B5, 0xB7B8,
                     0xB7C7, 0xB7C9, 0xB7EC, 0xB7ED, 0xB7F0,
                     0xB7F4, 0xB7FC, 0xB7FD, 0xB7FF, 0xB800,
                     0xB801, 0xB807, 0xB808, 0xB809, 0xB80C,
                     0xB810, 0xB818, 0xB819, 0xB81B, 0xB81D,
                     0xB824, 0xB825, 0xB828, 0xB82C, 0xB834,
                     0xB835, 0xB837, 0xB838, 0xB839, 0xB840,
                     0xB844, 0xB851, 0xB853, 0xB85C, 0xB85D,
                     0xB860, 0xB864, 0xB86C, 0xB86D, 0xB86F,
                     0xB871, 0xB878, 0xB87C, 0xB88D, 0xB8A8,
                     0xB8B0, 0xB8B4, 0xB8B8, 0xB8C0, 0xB8C1,
                     0xB8C3, 0xB8C5, 0xB8CC, 0xB8D0, 0xB8D4,
                     0xB8DD, 0xB8DF, 0xB8E1, 0xB8E8, 0xB8E9,
                     0xB8EC, 0xB8F0, 0xB8F8, 0xB8F9, 0xB8FB,
                     0xB8FD, 0xB904, 0xB918, 0xB920, 0xB93C,
                     0xB93D, 0xB940, 0xB944, 0xB94C, 0xB94F,
                     0xB951, 0xB958, 0xB959, 0xB95C, 0xB960,
                     0xB968, 0xB969, 0xB96B, 0xB96D, 0xB974,
                     0xB975, 0xB978, 0xB97C, 0xB984, 0xB985,
                     0xB987, 0xB989, 0xB98A, 0xB98D, 0xB98E,
                     0xB9AC, 0xB9AD, 0xB9B0, 0xB9B4, 0xB9BC,
                     0xB9BD, 0xB9BF, 0xB9C1, 0xB9C8, 0xB9C9,
                     0xB9CC, 0xB9CE, 0xB9CF, 0xB9D0, 0xB9D1,
                     0xB9D2, 0xB9D8, 0xB9D9, 0xB9DB, 0xB9DD,
                     0xB9DE, 0xB9E1, 0xB9E3, 0xB9E4, 0xB9E5,
                     0xB9E8, 0xB9EC, 0xB9F4, 0xB9F5, 0xB9F7,
                     0xB9F8, 0xB9F9, 0xB9FA, 0xBA00, 0xBA01,
                     0xBA08, 0xBA15, 0xBA38, 0xBA39, 0xBA3C,
                     0xBA40, 0xBA42, 0xBA48, 0xBA49, 0xBA4B,
                     0xBA4D, 0xBA4E, 0xBA53, 0xBA54, 0xBA55,
                     0xBA58, 0xBA5C, 0xBA64, 0xBA65, 0xBA67,
                     0xBA68, 0xBA69, 0xBA70, 0xBA71, 0xBA74,
                     0xBA78, 0xBA83, 0xBA84, 0xBA85, 0xBA87,
                     0xBA8C, 0xBAA8, 0xBAA9, 0xBAAB, 0xBAAC,
                     0xBAB0, 0xBAB2, 0xBAB8, 0xBAB9, 0xBABB,
                     0xBABD, 0xBAC4, 0xBAC8, 0xBAD8, 0xBAD9,
                     0xBAFC, 0xBB00, 0xBB04, 0xBB0D, 0xBB0F,
                     0xBB11, 0xBB18, 0xBB1C, 0xBB20, 0xBB29,
                     0xBB2B, 0xBB34, 0xBB35, 0xBB36, 0xBB38,
                     0xBB3B, 0xBB3C, 0xBB3D, 0xBB3E, 0xBB44,
                     0xBB45, 0xBB47, 0xBB49, 0xBB4D, 0xBB4F,
                     0xBB50, 0xBB54, 0xBB58, 0xBB61, 0xBB63,
                     0xBB6C, 0xBB88, 0xBB8C, 0xBB90, 0xBBA4,
                     0xBBA8, 0xBBAC, 0xBBB4, 0xBBB7, 0xBBC0,
                     0xBBC4, 0xBBC8, 0xBBD0, 0xBBD3, 0xBBF8,
                     0xBBF9, 0xBBFC, 0xBBFF, 0xBC00, 0xBC02,
                     0xBC08, 0xBC09, 0xBC0B, 0xBC0C, 0xBC0D,
                     0xBC0F, 0xBC11, 0xBC14, 0xBC15, 0xBC16,
                     0xBC17, 0xBC18, 0xBC1B, 0xBC1C, 0xBC1D,
                     0xBC1E, 0xBC1F, 0xBC24, 0xBC25, 0xBC27,
                     0xBC29, 0xBC2D, 0xBC30, 0xBC31, 0xBC34,
                     0xBC38, 0xBC40, 0xBC41, 0xBC43, 0xBC44,
                     0xBC45, 0xBC49, 0xBC4C, 0xBC4D, 0xBC50,
                     0xBC5D, 0xBC84, 0xBC85, 0xBC88, 0xBC8B,
                     0xBC8C, 0xBC8E, 0xBC94, 0xBC95, 0xBC97,
                     0xBC99, 0xBC9A, 0xBCA0, 0xBCA1, 0xBCA4,
                     0xBCA7, 0xBCA8, 0xBCB0, 0xBCB1, 0xBCB3,
                     0xBCB4, 0xBCB5, 0xBCBC, 0xBCBD, 0xBCC0,
                     0xBCC4, 0xBCCD, 0xBCCF, 0xBCD0, 0xBCD1,
                     0xBCD5, 0xBCD8, 0xBCDC, 0xBCF4, 0xBCF5,
                     0xBCF6, 0xBCF8, 0xBCFC, 0xBD04, 0xBD05,
                     0xBD07, 0xBD09, 0xBD10, 0xBD14, 0xBD24,
                     0xBD2C, 0xBD40, 0xBD48, 0xBD49, 0xBD4C,
                     0xBD50, 0xBD58, 0xBD59, 0xBD64, 0xBD68,
                     0xBD80, 0xBD81, 0xBD84, 0xBD87, 0xBD88,
                     0xBD89, 0xBD8A, 0xBD90, 0xBD91, 0xBD93,
                     0xBD95, 0xBD99, 0xBD9A, 0xBD9C, 0xBDA4,
                     0xBDB0, 0xBDB8, 0xBDD4, 0xBDD5, 0xBDD8,
                     0xBDDC, 0xBDE9, 0xBDF0, 0xBDF4, 0xBDF8,
                     0xBE00, 0xBE03, 0xBE05, 0xBE0C, 0xBE0D,
                     0xBE10, 0xBE14, 0xBE1C, 0xBE1D, 0xBE1F,
                     0xBE44, 0xBE45, 0xBE48, 0xBE4C, 0xBE4E,
                     0xBE54, 0xBE55, 0xBE57]

  # Character for padding on encoding.
  PADDING = '흐'

  # Public: Encode binary with BaseHangul.
  #
  # str - A String to encode.
  #
  # Returns the String encoded hangul.
  def self.encode(str)
    chunks = Utils.chunks(Utils.to_bin(str), 10)
    padding = ""
    unless chunks.empty?
      last = chunks.last
      case last.size
      when 2       then chunks[-1] = "1" + last.rjust(10, '0')
      when 4, 6, 8 then padding = PADDING.to_s * (last.size // 2 - 1)
      end
    end
    chunks.map { |b| to_hangul(b.ljust(10, '0').to_i(2)) }.join + padding
  end

  # Convert a index to hangul character.
  #
  # index - An Integer to convert.
  #
  # Examples
  #
  #   to_hangul(0)
  #   # => "가"
  #
  #   to_hangul(1023)
  #   # => "빌"
  #
  #   to_hangul(1027)
  #   # => "빗"
  #
  # Returns the String hangul for given index.
  # Raises IndexError if the index is out of range 0..1027.
  private def self.to_hangul(index)
    if index < 0 || index > 1027
      raise IndexError.new("Index #{index} outside of valid range: 0..1027")
    end
    EUC_KR_TO_UTF_8[index].chr
  end
end
